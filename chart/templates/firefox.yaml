apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefox
  labels:
    app: firefox
spec:
  selector:
    matchLabels:
      app: firefox
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: firefox
    spec:
      containers:
      - name: firefox
        image: jlesage/firefox
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 2048Gi 
        ports:
        - containerPort: 5800
          name: http
        volumeMounts:
        - name: configs
          mountPath: /config
      volumes:
        - name: configs
          persistentVolumeClaim:
            claimName: firefox-configs
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: firefox-configs
  labels:
    app: firefox
spec:
  storageClassName: local-path
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: firefox
spec:
  selector:
    app: firefox
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 5800
    targetPort: 5800
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: configs
          mountPath: /etc/nginx/conf.d
      volumes:
        - name: configs
          configMap:
            name: nginx-config
      restartPolicy: Always
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
  namespace: default
data:
  apassword: {{ .Values.firefox.basicAuth }}
  site.conf: |-
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }
    upstream docker-firefox {
      # If the reverse proxy server is not running on the same machine as the
      # Docker container, use the IP of the Docker host here.
      # Make sure to adjust the port according to how port 5800 of the
      # container has been mapped on the host.
      server firefox:5800;
    }

    server {
      server_name firefox.backend;

      auth_basic "please inputs your username password";
      auth_basic_user_file /etc/nginx/conf.d/apassword;
      location / {
              proxy_pass http://docker-firefox;
      }

      location /websockify {
        proxy_pass http://docker-firefox;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 86400;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 8000
    targetPort: 80
